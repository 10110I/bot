





async def start_parsing(ball,direction,message):
    try:
        k = 0
        cookies = {
            'top100_id': 't1.-1.1257815121.1659005952933',
            '_ym_d': '1659005953',
            '_ym_uid': '1659005953948842883',
            'PHPSESSID': '56utcnrn697iuaulmjoppls601',
            '_ym_isad': '2',
            '_ym_visorc': 'w',
            'last_visit': '1661173520897%3A%3A1661184320897',
            't3_sid_-1': 's1.351532153.1661183531566.1661184320907.7.7.25.1',
        }

        headers = {
            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
            'Accept-Language': 'ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7',
            'Cache-Control': 'max-age=0',
            'Connection': 'keep-alive',
            # Requests sorts cookies= alphabetically
            # 'Cookie': 'top100_id=t1.-1.1257815121.1659005952933; _ym_d=1659005953; _ym_uid=1659005953948842883; PHPSESSID=56utcnrn697iuaulmjoppls601; _ym_isad=2; _ym_visorc=w; last_visit=1661173520897%3A%3A1661184320897; t3_sid_-1=s1.351532153.1661183531566.1661184320907.7.7.25.1',
            'Origin': 'http://priem.sut.ru',
            'Referer': 'http://priem.sut.ru/konkursnie-otbori',
            'Upgrade-Insecure-Requests': '1',
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36',
        }

        data = {
            'general': '101',
            'education_base_to': '3',
            'training_form': '4',
            'training_type': '4',
            '1cunv_groupab': str(direction),
            'action': 'get_result',
            'rekzach': '1',
        }

        response = requests.post('http://priem.sut.ru/konkursnie-otbori', cookies=cookies, headers=headers, data=data,
                                 verify=False)
        soup = BeautifulSoup(response.text, 'lxml')
        name_direction = soup.find('th', colspan="10").text
        prikaz_ = soup.find_all('th')
        prikaz = []
        for name in prikaz_:
            prikaz.append(name.text)
        prikaz = str(prikaz[-1])
        all_td = soup.find_all('td')
        tr_list = []
        for tr in all_td:
            tr_list.append(tr.text)
        count_finall_position = tr_list[3]
        if tr_list[0] == '–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç –¥–ª—è –ø—Ä–∏–µ–º–∞:':
            tr_list = tr_list[6:]
        else:
            tr_list = tr_list

        if prikaz == '–ü—Ä–∏–∫–∞–∑ –æ –∑–∞—á–∏—Å–ª–µ–Ω–∏–∏':
            zip_tr_list = zip(*[iter(tr_list)] * 10)
            list_tr_list = list(zip_tr_list)
        else:
            zip_tr_list = zip(*[iter(tr_list)] * 9)
            list_tr_list = list(zip_tr_list)
            k += 1
        l = 0
        for x in range(int(count_finall_position)):
            ab = list_tr_list[x]
            if int(ab[2]) >= int(ball) and ab[6] == '–î–∞' and ab[7] == '–î–∞' and k == 1:
                l += 1
            elif int(ab[2]) >= int(ball) and ab[7] == '–î–∞' and ab[8] == '–î–∞' and k == 0:
                l += 1
        before = int(count_finall_position) - l
        if before < 0:
            before = 0
        else:
            before = before
        after = l + 1
        markup = InlineKeyboardMarkup(row_width=1)
        item1 = InlineKeyboardButton(text='–ú–µ–Ω—é üìí',callback_data='premenu')
        markup.add(item1)
        if before > 0:
            await message.answer('‚òëÔ∏è | '+str(name_direction) + '–í–∞—à –±–∞–ª–ª: ' + str(ball) + ', –µ—Å–ª–∏ –≤—ã –ø–æ–¥–∞–¥–∏—Ç–µ –æ—Ä–∏–≥–∏–Ω–∞–ª –∏ —Å–æ–≥–ª–∞—Å–∏–µ, —Ç–æ –±—É–¥–µ—Ç–µ –Ω–∞ '+str(after) + ' –º–µ—Å—Ç–µ –∏–∑ '+ str(count_finall_position) + '. –ó–∞–ø–∞—Å –≤  ' + str(before- 1)+ ' —Å–≤–æ–±–æ–¥–Ω—ã—Ö –º–µ—Å—Ç –¥–ª—è –≤–∞—Å, —É–¥–∞—á–∏ !'+'\n P.S /// –î–∞–Ω–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Å—á–∏—Ç–∞–µ—Ç —Ö—É–¥—à–∏–π –∏—Å—Ö–æ–¥',reply_markup=markup)
        else:
            await message.answer('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —Å –≤–∞—à–∏–º –±–∞–ª–ª–æ–º ' + str(ball) + ' –≤—ã –≤–Ω–µ –∫–æ–Ω–∫—É—Ä—Å–∞ –Ω–∞ –±—é–¥–∂–µ—Ç–Ω—ã–µ –º–µ—Å—Ç–∞ ;(',reply_markup=markup)
    except:
        markup1= InlineKeyboardMarkup(row_width=2)
        item2 = InlineKeyboardButton(text='–ó–∞–Ω–æ–≤–æ üîÅ',callback_data='start1')
        item3 = InlineKeyboardButton(text = '–ú–µ–Ω—é üìí', callback_data= 'premenu2')
        markup1.add(item2,item3)
        await message.answer('‚ùå | –î–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ, –ª–∏–±–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–∞–π—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑, –ª–∏–±–æ –≤–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –º–µ–Ω—é:',reply_markup=markup1)